name: "🔄 CI"

on:
  push:
    tags: ["v[1-9]+.[0-9]+.[0-9]"]
  pull_request:
    branches: ["main"]
    types: ["opened", "synchronize", "reopened"]

jobs:
  build:
    name: 🔨 Build
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: 🔧 Use .NET 6.0 SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x

      - name: 🔙 Get Previous Version
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"

      - name: 🔨 Build
        run: >
          dotnet build ./Tethos.sln
          --configuration Release
          -p:Version=$(echo ${{ steps.previoustag.outputs.tag }} | tr -d 'v')

      - name: 🔦 Lint
        run: dotnet format --verify-no-changes --no-restore

      - name: 📚 Artifact NuGet
        uses: actions/upload-artifact@v2
        if: success()
        with:
          name: nuget-packages
          path: |
            src/**/Tethos*.nupkg
            src/**/Tethos*.snupkg

  sonar:
    name: 📡 SonarCloud
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: 🔧 Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11

      - name: 🔦 Restore tools
        run: dotnet tool restore

      - name: 🔽 Start SonarCloud scan
        if: ${{ github.actor != 'dependabot[bot]' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: >
          dotnet sonarscanner begin
          /o:"${{ secrets.SONAR_ORGANIZATION }}"
          /k:"${{ secrets.SONAR_PROJECT_KEY }}"
          /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
          /d:sonar.host.url="${{ secrets.SONAR_URL }}"
          /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml"
          /d:sonar.cs.vstest.reportsPaths="coverage/*.trx"
          /d:sonar.coverage.exclusions="test/**, demo/**"

      - name: 🔧 Use .NET 6.0 SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x

      - name: 🔨 Build
        run: >
          dotnet build ./Tethos.sln
          --configuration Release

      - name: 🔖 Fetch artifact
        uses: actions/download-artifact@master
        with:
          name: test-results
          path: coverage

      - name: 🔦 Restore tools
        run: dotnet tool restore

      - name: 🔼 End SonarCloud scan
        if: ${{ github.actor != 'dependabot[bot]' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: >
          dotnet sonarscanner end
          /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

  test:
    name: 🔬 Test
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v2

      - name: 🔧 Use .NET 6.0 SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x

      - name: 🔬 Test
        run: >
          dotnet test ./Tethos.sln
          --configuration Release
          /p:CollectCoverage=true
          /p:CoverletOutputFormat=opencover
          --logger trx
          --results-directory ./coverage

      - name: 🔍 Coverage
        uses: codecov/codecov-action@v2
        with:
          verbose: true

      - name: 📚 Artifact Test Results
        uses: actions/upload-artifact@v2
        if: success() || failure()
        with:
          name: test-results
          path: |
            coverage/*.trx
            **/coverage.opencover.xml

  spellcheck:
    name: 🔦 Spellcheck
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v2

      - name: ✅ Check spelling
        uses: check-spelling/check-spelling@v0.0.20-alpha3
        with:
          extra_dictionaries: cspell:csharp/csharp.txt
            cspell:companies/companies.txt
            cspell:dotnet/dotnet.txt
            cspell:filetypes/filetypes.txt
            cspell:fullstack/fullstack.txt
            cspell:html/html.txt
            cspell:software-terms/software-terms.txt
  lint-yml:
    name: 🐞 YML
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v2

      - name: ✅ Check YML
        uses: ibiqlik/action-yamllint@v3
