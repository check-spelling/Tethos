name: ci

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    name: Test Coverage
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
      - name: 🔨 Use .NET Core 5.0 SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "5.0.x"

      - name: Restore dependencies
        run: dotnet restore ./Tethos.sln

      - name: Build
        run: dotnet build ./Tethos.sln --no-restore

      - name: Test
        run: dotnet test ./Tethos.sln --verbosity normal --collect:"XPlat Code Coverage" --logger trx --results-directory ./coverage

      - name: Copy Coverage To Predictable Location
        run: cp coverage/**/coverage.cobertura.xml coverage/coverage.cobertura.xml

      - name: ReportGenerator
        uses: danielpalme/ReportGenerator-GitHub-Action@4.8.12
        with:
          reports: 'coverage/**/coverage.cobertura.xml' # REQUIRED # The coverage reports that should be parsed (separated by semicolon). Globbing is supported.
          targetdir: 'coveragereport' # REQUIRED # The directory where the generated report should be saved.
          reporttypes: 'HtmlInline;Cobertura;Badges;MarkdownSummary' # The output formats and scope (separated by semicolon) Values: Badges, Clover, Cobertura, CsvSummary, Html, HtmlChart, HtmlInline, HtmlInline_AzurePipelines, HtmlInline_AzurePipelines_Dark, HtmlSummary, JsonSummary, Latex, LatexSummary, lcov, MarkdownSummary, MHtml, PngChart, SonarQube, TeamCitySummary, TextSummary, Xml, XmlSummary
          sourcedirs: '' # Optional directories which contain the corresponding source code (separated by semicolon). The source directories are used if coverage report contains classes without path information.
          historydir: '' # Optional directory for storing persistent coverage information. Can be used in future reports to show coverage evolution.
          plugins: '' # Optional plugin files for custom reports or custom history storage (separated by semicolon).
          assemblyfilters: '-xunit\*' # Optional list of assemblies that should be included or excluded in the report. Exclusion filters take precedence over inclusion filters. Wildcards are allowed.
          classfilters: '+*' # Optional list of classes that should be included or excluded in the report. Exclusion filters take precedence over inclusion filters. Wildcards are allowed.
          filefilters: '+*' # Optional list of files that should be included or excluded in the report. Exclusion filters take precedence over inclusion filters. Wildcards are allowed.
          verbosity: 'Info' # The verbosity level of the log messages. Values: Verbose, Info, Warning, Error, Off
          title: '' # Optional title.
          tag: '${{ github.run_number }}_${{ github.run_id }}' # Optional tag or build version.
          customSettings: '' # Optional custom settings (separated by semicolon). See: https://github.com/danielpalme/ReportGenerator/wiki/Settings.
          toolpath: 'reportgeneratortool' # Default directory for installing the dotnet tool.
      
      - name: Upload coverage report artifact
        uses: actions/upload-artifact@v2.2.3
        with:
          name: CoverageReport # Artifact name        
          path: "**/*.html" # Directory containing files to upload
      

      #- name: Code Coverage Summary Report
      #  uses: irongut/CodeCoverageSummary@v1.0.5
      #  with:
      #    filename: coverage/coverage.cobertura.xml
      #    badge: true
      #    format: 'markdown'
      #    output: 'both'

      - name: Add Coverage as a comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: coveragereport/Summary.md

      #- name: Create code coverage report
      #  run: |
      #    dotnet tool install -g dotnet-reportgenerator-globaltool
      #    reportgenerator -reports:$(Agent.WorkFolder)/**/coverage.cobertura.xml -targetdir:$(Build.SourcesDirectory)/CodeCoverage -reporttypes:'Cobertura'
     